# http://nginx.org/en/docs/http/ngx_http_core_module.html
worker_processes  auto;

events {
  worker_connections  1024;
}

http {
  sendfile            on;
  tcp_nodelay         on;
  include   mime.types;
  connection_pool_size 128;
  merge_slashes on;

  keepalive_timeout   5;
  keepalive_requests 500000;
  types_hash_max_size 2048;

  client_body_timeout 10s;
  client_header_timeout 10s;
  client_max_body_size 32m;

  # error_page 404 /404.html;

  log_format request_format '[$time_local] - $remote_addr, '
                               '[connection-id: $connection current-number: $connection_requests], '
                               '[$request $status], '
                               '[referer: "$http_referer" user-agent: "$http_user_agent"], '
                               '[size: $bytes_sent body-size: $body_bytes_sent], '
                               '[rt: $request_time uct: $upstream_connect_time uht: $upstream_header_time urt: $upstream_response_time]';
  open_log_file_cache max=1000 inactive=20s valid=1m min_uses=2;

  root   /front;
  server {
    listen       80;
    charset utf-8;

    location / {
      etag  on;
      if_modified_since before;

      open_file_cache          max=1000 inactive=5s;
      open_file_cache_valid    5s;
      open_file_cache_min_uses 2;
      open_file_cache_errors   off;

      index  index.html;

      access_log /logs/front-access.log request_format;
      error_log /logs/front-error.log;
    }

    location ^~ /api {
      resolver 10.0.0.2 valid=5s;
      set $webchat "webchat.local:8080";

      proxy_pass    http://$webchat;

      proxy_http_version 1.1;
      proxy_set_header    Host                $http_host;
      proxy_set_header    X-Real-IP           $realip_remote_addr;
      proxy_set_header    X-Forwarded-Proto   $scheme;
      proxy_set_header    X-Forwarded-For     $proxy_add_x_forwarded_for;

      default_type  application/json;

      access_log /logs/webchat-access.log request_format;
      error_log /logs/webchat-error.log;
    }

    location /health {
        access_log off;
        return 200 "healthy";
    }
  }
}
